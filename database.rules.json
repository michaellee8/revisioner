{
  "rules": {
    "users": {
      "$uid": {
        "intro": {
          ".validate": "newData.isString() && newData.val().length > 0",
          ".read": true,
          ".write": "auth != null && $uid == auth.uid"
        },
        "created": {
          "$set_id": {
            ".validate": "newData.val() === true",
            ".write": "auth != null && $uid == auth.uid",
            ".read": "auth != null && $uid == auth.uid"
          },
          ".validate": "!newData.isString() && !newData.isNumber() && !newData.isBoolean()",
          ".read": true,
          ".write": "auth != null && $uid == auth.uid"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length < 100 && newData.val().length > 0",
          ".read": true,
          ".write": "auth != null && $uid == auth.uid"
        },
        "subscribed": {
          "$set_id": {
            ".validate": "newData.val() === true",
            ".write": "auth != null && $uid == auth.uid",
            ".read": "auth != null && $uid == auth.uid"
          },
          ".validate": "!newData.isString() && !newData.isNumber() && !newData.isBoolean()",
          ".read": "auth != null && $uid == auth.uid",
          ".write": "auth != null && $uid == auth.uid"
        },
        ".write": "auth != null && $uid == auth.uid",
        ".read": "auth != null && $uid == auth.uid",
        ".validate": "newData.hasChildren(['name','created','subscribed','intro'])"
      }
    },
    "StaticData": {
      ".read": true,
      ".write": false
    }
  }
}
